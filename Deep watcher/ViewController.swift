//
//  ViewController.swift
//  Deep watcher
//
//  Created by Julio Cesar Gutierrez Briones on 26/08/17.
//  Copyright Â© 2017 Julio Cesar Gutierrez Briones. All rights reserved.
//

import UIKit
import Photos

var imagePicker: UIImagePickerController!

class ViewController: UIViewController, UINavigationControllerDelegate, UIImagePickerControllerDelegate {
    
    @IBOutlet weak var imageView: UIImageView!
    //Button to take the picture
    @IBOutlet weak var captureButton: UIButton!
    
    //Displays the view of the video output generated by the camera
    @IBOutlet weak var capturePreviewView: UIView!
    //buttons to change the camera view and turn on and off the flash
    @IBOutlet weak var toggleCameraButton: UIButton!

    @IBOutlet weak var toggleFlashButton: UIButton!
    
    
    let cameraController = CameraController()
    
    override var prefersStatusBarHidden: Bool { return true }
    
}



extension ViewController{

    override func viewDidLoad() {
        func configureCameraController() {
            cameraController.prepare {(error) in
                if let error = error {
                    print(error)
                }
                
                try? self.cameraController.displayPreview(on: self.capturePreviewView)
            }
        }
        
        func styleCaptureButton() {
            captureButton.layer.borderColor = UIColor.yellow.cgColor
            captureButton.layer.borderWidth = 3
            
            captureButton.layer.cornerRadius = min(captureButton.frame.width, captureButton.frame.height) / 2
        }
        
        styleCaptureButton()
        configureCameraController()
        
        
    }
}





extension ViewController {
    @IBAction func toggleFlash(_sender: UIButton){
        if cameraController.flashMode == .on {
            cameraController.flashMode = .off
            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash Off Icon"), for: .normal)
        }
            
        else {
            cameraController.flashMode = .on
            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash On Icon"), for: .normal)
        }

    }
    @IBAction func switchCameras(_sender: UIButton){
        do {
            try cameraController.switchCameras()
        }
            
        catch {
            print(error)
        }
        
        switch cameraController.currentCameraPosition {
        case .some(.front):
            toggleCameraButton.setImage(#imageLiteral(resourceName: "Front Camera Icon"), for: .normal)
            
        case .some(.rear):
            toggleCameraButton.setImage(#imageLiteral(resourceName: "Rear Camera Icon"), for: .normal)
            
        case .none:
            return
        }

    }
    
    @IBAction func captureImage(_sender: UIButton){
        imagePicker =  UIImagePickerController()
        imagePicker.delegate = self
        imagePicker.sourceType = .camera
        
        present(imagePicker, animated: true, completion: nil)
        
        cameraController.captureImage {(image, error) in
            guard let image = image else {
                print(error ?? "Image capture error")
                return
            }
            
            try? PHPhotoLibrary.shared().performChangesAndWait {
                PHAssetChangeRequest.creationRequestForAsset(from: image)
            }
        }
        
    }
    func imagePickerController(picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [NSObject : Any]) {
        imagePicker.dismiss(animated: true, completion: nil)
  
        
    }
 

    
}




